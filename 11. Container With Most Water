class Solution(object):
    def maxArea(self, height):
        """
        :type height: List[int]
        :rtype: int
        """
        start = 0
        end = len(height) - 1
        volume = 0
        #volume = height times length
        # length = end - start
        while start < end:
            if height[start] <= height[end]:# take the smaller length for the volume calculation
                # use max function to update volume
                volume = max(volume, height[start] * (end - start))
                start +=1# after taking smaller length, increment the corresponding pointer to try to find bigger volume, more eiffiecient than brute force
            else:
                volume = max(volume, height[end] * (end - start))
                end -= 1
        return volume
