class Solution(object):
    def lengthOfLongestSubstring(self, s):
        """
        :type s: str
        :rtype: int
        """
        dup = []# a list to store all duplicate values
        answer = 1# unless if string has no characters answer will lawyas be at least 1
        count = 0
        # pointers to act as a slider to find biggest substring
        left = 0# left pointer
        right = 0# right pointer
        if len(s) == 0:# in case if string has no characters
            return 0
        # brute force method
        while (right + left) < len(s):
            if s[right + left] not in dup:
                dup.append(s[right + left])
                right += 1
                count += 1
            else:
                if answer < count:# a new longest asubtring has been found
                    answer = count
                count = 0# resetting
                dup = []
                left += 1
                right = 0
        if answer < count:
            answer = count
        return answer                                                             

