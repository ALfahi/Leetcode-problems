class Solution(object):
    def climbStairs(self, n):
        """
        :type n: int
        :rtype: int
        """
        dp = []# dynamic problem
        for i in range(0, n + 1):
            dp.append(None)
        total = 0

        # it's like a fibonacci problem
        def recursion(value, total):
            if dp[value] != None:
                return dp[value]
            if value == 1:
                return 1
            elif value == 2:
                return 2
            else:
                total += recursion(value -1, total) + recursion(value - 2, total)
            dp[value] = total
            return total
        # calling in the recursion function
        return recursion(n, total)
